using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using static WindowsFormsApp4.Form1;

namespace WindowsFormsApp4
{
	public partial class Form1 : Form
	{
		// Sučelje za vozilo
		public interface IVehicle
		{
			void PokreniMotor();
			void ZaustaviMotor();
			string DohvatiVrstuVozila();
		}

		// Klasa za automobil
		public class Car : IVehicle
		{
			public void PokreniMotor()
			{
				MessageBox.Show("Motor automobila je pokrenut.");
			}

			public void ZaustaviMotor()
			{
				MessageBox.Show("Motor automobila je zaustavljen.");
			}

			public string DohvatiVrstuVozila()
			{
				return "Automobil";
			}
		}

		// Klasa za motocikl
		public class Motorcycle : IVehicle
		{
			public void PokreniMotor()
			{
				MessageBox.Show("Motor motocikla je pokrenut.");
			}

			public void ZaustaviMotor()
			{
				MessageBox.Show("Motor motocikla je zaustavljen.");
			}

			public string DohvatiVrstuVozila()
			{
				return "Motocikl";
			}
		}

		// Klasa garaža
		public class Garage
		{
			private List<IVehicle> vozila;

			public Garage()
			{
				vozila = new List<IVehicle>();
			}

			public void DodajVozilo(IVehicle vozilo)
			{
				vozila.Add(vozilo);
			}

			public void PokreniSveMotore()
			{
				foreach (var vozilo in vozila)
				{
					vozilo.PokreniMotor();
				}
			}

			public void ZaustaviSveMotore()
			{
				foreach (var vozilo in vozila)
				{
					vozilo.ZaustaviMotor();
				}
			}

			public List<string> DohvatiInformacijeOVozilima()
			{
				List<string> info = new List<string>();
				foreach (var vozilo in vozila)
				{
					info.Add(vozilo.DohvatiVrstuVozila());
				}
				return info;
			}
		}

		private Garage garaža;

		// Konstruktor
		public Form1()
		{
			InitializeComponent();
			garaža = new Garage();
		}

		// Događaj pri učitavanju forme
		private void Form1_Load(object sender, EventArgs e)
		{
			cmbVehicleType.Items.Add("Automobil");
			cmbVehicleType.Items.Add("Motocikl");
		}

		// Događaj za dodavanje vozila
		private void button1_Click(object sender, EventArgs e)
		{
			IVehicle vozilo = null;

			// Provjera da li je nešto odabrano u ComboBox-u
			if (cmbVehicleType.SelectedItem != null)
			{
				// Na temelju odabira u ComboBox-u dodajemo vozilo
				if (cmbVehicleType.SelectedItem.ToString() == "Automobil")
				{
					vozilo = new Car();
				}
				else if (cmbVehicleType.SelectedItem.ToString() == "Motocikl")
				{
					vozilo = new Motorcycle();
				}

				if (vozilo != null)
				{
					garaža.DodajVozilo(vozilo);
					AžurirajListuVozila();
				}
			}
			else
			{
				MessageBox.Show("Molimo odaberite vrstu vozila.");
			}
		}

		// Ažuriranje liste vozila
		private void AžurirajListuVozila()
		{
			lstVehicles.Items.Clear();
			var vozila = garaža.DohvatiInformacijeOVozilima();
			foreach (var vozilo in vozila)
			{
				lstVehicles.Items.Add(vozilo);
			}
		}

		// Događaj za pokretanje svih motora
		private void button2_Click(object sender, EventArgs e)
		{
			garaža.PokreniSveMotore();
		}

		// Događaj za zaustavljanje svih motora
		private void button3_Click(object sender, EventArgs e)
		{
			garaža.ZaustaviSveMotore();
		}
	}
}
