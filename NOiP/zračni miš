import cv2
import mediapipe
import pyautogui

ruke = mediapipe.solutions.hands.Hands(max_num_hands=2)
drawing_option = mediapipe.solutions.drawing_utils
screen_sirina, screen_visina = pyautogui.size()
camera = cv2.VideoCapture(1)

x1 = y1 = 0  
x2 = y2 = 40  
x3 = y3 = 80  
x4 = y4 = 100  

prvi_klik = True
klik = desni_klik = povlacenje = False

while True:
    _, image = camera.read()
    image_visina, image_sirina, _ = image.shape
    image = cv2.flip(image, 1)
    rgb_image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    output_ruke = ruke.process(rgb_image)
    sve_ruke = output_ruke.multi_hand_landmarks

    if sve_ruke:
        max_area = 0
        closest_hand = None

        for ruka in sve_ruke:
            x_min = min(l.x for l in ruka.landmark)
            x_max = max(l.x for l in ruka.landmark)
            y_min = min(l.y for l in ruka.landmark)
            y_max = max(l.y for l in ruka.landmark)

            area = (x_max - x_min) * (y_max - y_min)
            
            if area > max_area:
                max_area = area
                closest_hand = ruka

        if closest_hand:
            drawing_option.draw_landmarks(image, closest_hand)
            jedna_ruka = closest_hand.landmark
            
            for id, lm in enumerate(jedna_ruka):
                x = int(lm.x * image_sirina)
                y = int(lm.y * image_visina)

                if id == 12:
                    mouse_x = int(screen_sirina / image_sirina * x)
                    mouse_y = int(screen_visina / image_visina * y)
                    pyautogui.moveTo(mouse_x, mouse_y)

                if id == 4:   x1, y1 = x, y
                if id == 8:   x2, y2 = x, y
                if id == 16:  x3, y3 = x, y
                if id == 12:  x4, y4 = x, y

            if abs(y2 - y1) + abs(x2 - x1) < 30:
                if prvi_klik:
                    klik = True
                    prvi_klik = False
                if not klik and not povlacenje:
                    print("Klik")
                    pyautogui.click()
                    klik = True
            else:
                klik = False

            if abs(y3 - y1) + abs(x3 - x1) < 30:
                if not desni_klik and not povlacenje:
                    print("Desni Klik")
                    pyautogui.rightClick()
                    desni_klik = True
            else:
                desni_klik = False

            if abs(y4 - y1) + abs(x4 - x1) < 30:
                if not povlacenje:
                    print("Povlačenje započeto")
                    pyautogui.mouseDown()
                    povlacenje = True
            else:
                if povlacenje:
                    print("Povlačenje završeno")
                    pyautogui.mouseUp()
                    povlacenje = False

    else:
        prvi_klik = True

    cv2.imshow("Video", image)

    key = cv2.waitKey(5)
    if key == 27:
        break

camera.release()
cv2.destroyAllWindows()
